import Colors from "@/constants/Colors";
import { container, input, text } from "@/constants/Styles";
import ButtonFillContainer from "@/constants/components/create/ButtonFillContainer";
import MyTimePicker from "@/constants/components/create/MyTimePickerModal";
import { useFirebaseUser } from "@/constants/logic/useFirebaseUser";
import { Button } from "@rneui/themed";
import React, { useState } from "react";
import { ScrollView, Text, TextInput, View } from "react-native";
import { SafeAreaProvider } from "react-native-safe-area-context";

export default function createPage(userId: any) {
  const { username, isLoading, userPosition } = useFirebaseUser(userId);
  const [time, setTime] = useState(new Date());

  if (isLoading) {
    return (
      <SafeAreaProvider style={container.root}>
        <Button
          title="loading"
          type="clear"
          loading
          loadingProps={{ size: 70, color: Colors.muted }}
        />
      </SafeAreaProvider>
    );
  }
  if (userPosition === "Qu·∫£n L√Ω")
    return (
      <ScrollView style={{ ...container.scrollView, paddingHorizontal: 10 }}>
        <SafeAreaProvider style={container.root}>
          {/* Title */}
          <Text style={{ ...text.headerPrimary }}>Nh·∫≠p th√¥ng tin d·ª± √°n</Text>

          {/* Project Name Input */}
          <View style={container.input}>
            <Text style={text.label}>H·ªç v√† T√™n:</Text>
            <View style={container.button}>
              <TextInput
                style={{ ...input.normal }}
                placeholder="Nh·∫≠p t√™n d·ª± √°n"
                onChangeText={() => {}}
              />
            </View>
          </View>

          {/* Project Description Input */}
          <View style={container.input}>
            <Text style={text.label}>M√¥ t·∫£:</Text>
            <View style={container.button}>
              <TextInput
                style={{
                  ...input.normal,
                  height: "auto",
                }}
                placeholder="Nh·∫≠p m√¥ t·∫£ d·ª± √°n"
                onChangeText={() => {}}
                multiline={true}
                numberOfLines={4}
                textAlignVertical="top"
              />
            </View>
          </View>

          {/* Project Name Input */}
          <View style={container.input}>
            <Text style={text.label}>H·ªç v√† T√™n:</Text>
            <View style={container.button}>
              <TextInput
                style={{ ...input.normal }}
                placeholder="Nh·∫≠p t√™n d·ª± √°n"
                onChangeText={() => {}}
              />
            </View>
          </View>

          {/* Project Time Input */}
          <View style={container.input}>
            <Text style={text.label}>Th·ªùi gian b·∫Øt ƒë·∫ßu:</Text>
            <View style={container.button}>
              <MyTimePicker />
            </View>
          </View>
        </SafeAreaProvider>
      </ScrollView>
    );
  else
    return (
      <SafeAreaProvider
        style={{
          ...container.root,
        }}
      >
        <Text
          style={{
            ...text.headerPrimary,
            textAlign: "center",
            alignSelf: "stretch",
          }}
        >
          B·∫°n Ch∆∞a C√≥ D·ª± √Ån üßê
        </Text>

        <Text
          style={{
            ...text.headerPrimary,
            textAlign: "center",
            fontSize: 14,
            color: Colors.white,
          }}
        >
          Nh·∫•n v√†o ƒë√¢y ƒë·ªÉ tham gia d·ª± √°n b·∫°n nh√© üëáüèª
        </Text>

        <Text
          style={{
            ...text.headerPrimary,
            textAlign: "center",
            fontSize: 16,
            color: Colors.success,
          }}
        >
          L∆∞u √Ω: C·∫ßn m√£ d·ª± √°n v√† m·∫≠t kh·∫©u d·ª± √°n
        </Text>

        <ButtonFillContainer
          link={"../projectsPage/joinProjectsPage/enterPassword"}
          color={Colors.primary}
          replace={false}
        ></ButtonFillContainer>
      </SafeAreaProvider>
    );
}
